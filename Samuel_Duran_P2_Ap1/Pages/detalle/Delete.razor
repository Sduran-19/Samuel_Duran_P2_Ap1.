@page "/deletevehiculo/{VehiculoId:int}"
@using Samuel_Duran_P2_Ap1.Models

@inject HttpClient httpClient
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="card-header">
    <h3><strong> Eliminar Vehículo</strong></h3>
</div>

<div class="card-body text-center">
    <div class="col-md-6 mb-3 mx-auto">
        <label class="form-label font-weight-bold">Vehículo Id:</label>
        <span>@vehiculo.VehiculoId</span>
    </div>

    <div class="col-md-6 mb-3 mx-auto">
        <label class="form-label font-weight-bold">Fecha:</label>
        <span>@vehiculo.Fecha</span>
    </div>

    <div class="col-md-6 mb-3 mx-auto">
        <label class="form-label font-weight-bold">Descripción:</label>
        <span>@vehiculo.Descripcion</span>
    </div>

    <div class="col-md-6 mb-3 mx-auto">
        <label class="form-label font-weight-bold">Monto:</label>
        <span>@vehiculo.Costos</span>
    </div>

    <div class="col-md-6 mb-3 mx-auto">
        <label class="form-label font-weight-bold">Gastos:</label>
        <span>@vehiculo.Gastos</span>
    </div>

    <div class="row">
        <div class="mb-4"></div>
        <table class="table table-bordered text-center">
            <thead class="bg-secondary text-white">
                <tr>
                    <th class="col-3">Accesorio Id</th>
                </tr>
            </thead>
            <tbody>
                @if (ListaDetalles.Any())
                {
                    @foreach (var detalle in ListaDetalles)
                    {
                        <tr>
                            <td class="col-3">@detalle.AccesorioId</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="3">No hay detalles...</td></tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-md-12 mb-3 mx-auto">
        <p>¿Seguro que deseas eliminar este vehículo?</p>
    </div>
</div>

<div class="card-footer bg-light d-flex justify-content-center">
    <div class="btn-group">
        <button @onclick="Eliminar" type="button" class="btn btn-success btn-block"><span class="fas fa-check"></span> Sí</button>
        <a href="/indexvehiculos/" class="btn btn-danger btn-block"><span class="fas fa-times"></span> No</a>
    </div>
</div>

@mensajeTexto

@code {

    public Vehiculo vehiculo = new Vehiculo();
    public List<VehiculoDetalle> ListaDetalles = new List<VehiculoDetalle>();

    [Parameter]
    public int VehiculoId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (VehiculoId > 0)
        {
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var vehiculoEncontrado = await httpClient.GetFromJsonAsync<Vehiculo>("api/Vehiculos/" + VehiculoId);
        if (vehiculoEncontrado != null)
        {
            this.vehiculo = vehiculoEncontrado;
            ListaDetalles = (await httpClient.GetFromJsonAsync<List<VehiculoDetalle>>("api/VehiculoDetalle"))!.Where(d => d.VehiculoId == VehiculoId).ToList();
        }
        else
        {
            await MostrarMensaje("Vehículo no encontrado", false);
        }
    }

    public async Task Eliminar()
    {
        var eliminado = await httpClient.DeleteAsync("api/Vehiculos/" + VehiculoId);
        if (eliminado.IsSuccessStatusCode)
        {
            foreach (var detalle in ListaDetalles)
            {
                if (detalle.VehiculoId == VehiculoId)
                {
                    await httpClient.DeleteAsync("api/VehiculoDetalle/" + detalle.Id);
                }
            }

            await MostrarMensaje("Eliminado Exitoso.", true);
            NavigationManager.NavigateTo("/indexvehiculos");
        }
        else
        {
            await MostrarMensaje("Error Inesperado.", false);
        }
    }

    string mensajeTexto = "";
    bool ModalMensaje = false;

    public async Task MostrarMensaje(string mensaje, bool exito)
    {
        mensajeTexto = mensaje;

        if (exito)
        {
            mensajeTexto = "Eliminado con Exito";
        }
        else
        {
            mensajeTexto = "Error";
        }

        ModalMensaje = true;
        StateHasChanged();
        await Task.Delay(3000);
        ModalMensaje = false;
        StateHasChanged();
    }
}
